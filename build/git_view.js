/*csd*/define(function(require,exports,module){"use strict";require("./git_style.css");var b=require("mokit/app");var c=require("self/models/file_manager");var e=require("mokit/utils");var a=require("mokit/jquery");var d=require("./main");return b.view.create({template:module.resovleUri("./git_tmpl.html"),el:{commitBox:".git-commit-box"},onInit:function(f){var g=this;},onRender:function(f){var g=this;},openConsole:function(f){var g=this;d.context.view.openFooter(d.context,"console");},repoChange:function(f){var i=this;i.openConsole();var h=f.$element.find("option:selected");var g=h.attr("data-path");i.model.git.switchRepo(g,function(){i.render();});},branchChange:function(g){var i=this;i.openConsole();var h=g.$element.find("option:selected");var f=e.trim(h.text());i.model.git.switchBranch(f,function(){c.loadDirInfo(i.model.git.repoPath);i.render();});},initRepo:function(f){var g=this;g.openConsole();g.model.git.initRepo(function(){g.render();});},clone:function(f){var g=this;g.openConsole();g.model.git.clone("",function(){g.render();});},pull:function(f){var g=this;g.openConsole();g.model.git.pull(function(){g.render();});},push:function(f){var g=this;g.openConsole();g.model.git.push(function(){g.render();});},refreshBranch:function(f){var g=this;g.openConsole();g.model.git.refreshBranch(function(){g.render();});},commit:function(f){var g=this;g.openConsole();g.model.git.commit(g.el.commitBox.val(),function(){g.render();});}});});